/*
    Copyright (c) 2013, 2014 digitalSTROM AG, Zurich, Switzerland

    Author: Sergey 'Jin' Bostandzhyan <jin@dev.digitalstrom.org>

    This file is part of libdSvDC.

    libdsvdc is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    libdsvdc is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with digitalSTROM Server. If not, see <http://www.gnu.org/licenses/>.
*/

package vdcapi;

message vdsm_RequestHello {
    optional string dSUID = 1;
    optional uint32 api_version = 2;
}

message vdc_ResponseHello {
    optional string dSUID = 1;
}

message vdc_SendAnnounceDevice {
    optional string dSUID = 1;
    optional string vdc_dSUID = 2;
}

message vdc_SendAnnounceVdc {
    optional string dSUID = 1;
}

message vdc_SendVanish {
    optional string dSUID = 1;
}

message vdc_SendIdentify {
    optional string dSUID = 1;
}

message vdsm_SendBye {
    optional string dSUID = 1;
}

message vdsm_SendRemove {
    optional string dSUID = 1;
}

message PropertyValue {
    optional bool v_bool = 1;
    optional uint64 v_uint64 = 2;
    optional int64 v_int64 = 3;
    optional double v_double = 4;
    optional string v_string = 5;
    optional bytes v_bytes = 6;
}

message PropertyElement {
    optional string name  = 1;
    optional PropertyValue value = 2;
    repeated PropertyElement elements = 3;
}

message vdsm_RequestGetProperty {
    optional string dSUID = 1;
    repeated PropertyElement query = 2;
}

message vdc_ResponseGetProperty {
    repeated PropertyElement properties = 1;
}

// expects generic response
message vdsm_RequestSetProperty {
    optional string dSUID = 1;
    optional bool preload = 2 [ default = false ]; // HACK: to be discussed
    repeated PropertyElement properties = 3;
}

message vdsm_SendPing {
    optional string dSUID = 1;
}

message vdc_SendPong {
    optional string dSUID = 1;
}

message vdsm_NotificationCallScene {
    optional string dSUID = 1;
    optional int32 scene = 2;
    optional bool force = 3;
    optional int32 group = 4;
    optional int32 zone_id = 5;
}

message vdsm_NotificationSaveScene {
    optional string dSUID = 1;
    optional int32 scene = 2;
    optional int32 group = 3;
    optional int32 zone_id = 4;
}

message vdsm_NotificationUndoScene {
    optional string dSUID = 1;
    optional int32 scene = 2;
    optional int32 group = 3;
    optional int32 zone_id = 4;
}

message vdsm_NotificationSetLocalPrio {
    optional string dSUID = 1;
    optional int32 scene = 2;
    optional int32 group = 3;
    optional int32 zone_id = 4;
}

message vdsm_NotificationCallMinScene {
    optional string dSUID = 1;
    optional int32 scene = 2;
    optional int32 group = 3;
    optional int32 zone_id = 4;
}

message vdsm_NotificationIdentify {
    optional string dSUID = 1;
    optional int32 group = 2;
    optional int32 zone_id = 3;
}

message vdsm_NotificationSetControlValue {
    optional string dSUID = 1;
    optional string name = 2;
    optional double value = 3;
    optional int32 group = 4;
    optional int32 zone_id = 5;
}

message vdsm_NotificationDimChannel {
    optional string dSUID = 1;
    optional int32 channel = 2;
    optional int32 mode = 3;
    optional int32 area = 4;
    optional int32 group = 5;
    optional int32 zone_id = 6;
}

message vdc_SendPushProperty {
    optional string dSUID = 1;
    repeated PropertyElement properties = 2;
}

